interWork = function(poll,hour) {
# get the URL for a certain hour
url1 =  paste(
"https://dd.weather.gc.ca/model_raqdps/10km/grib2/00/",
"00",
hour,
"/",
year(current.time),
month(current.time),
day(current.time),
"T",
"00",
"Z_MSC_RAQDPS_",
poll,
"_Sfc_RLatLon0.09_PT",
"00",
hour,
"H.grib2",
sep = ""
)
# get the file
poll.response <- GET(url1)
# give the tif a name
poll.name = paste(wd, "/",poll, "_", date(current.date), "_Base00_H", hour, ".tif", sep =
"")
# save the raster
writeBin(content(poll.response, "raw"), poll.name)
tempRas = raster(poll.name)
}
# this function calcualte the three hour average of a pollutant. Only house this for hours 3 - 9 because of the 00 in the URL
getMeanRas3_9 = function(hour,poll) {
hour2 = hour - 1
hour3 = hour - 2
h1 = interWork(hour,poll)*1000000000
h2 = interWork(hour2,poll)*1000000000
h3 = interWork(hour3,poll)*1000000000
rasStack = stack(h1,h2,h3)
pollStack = calc(rasStack, fun = mean)
}
# create a base dataframe
df = smoke.communities %>% st_drop_geometry()
# for each hour, calculate the AQHI
for (hour in 3:9) {
print(hour)
no2 = getMeanRas3_9(hour, "NO2")
o3 = getMeanRas3_9(hour, "O3")
pm25 = getMeanRas3_9(hour, "PM2.5")
# Calculate AQHI
A = (exp(0.000537 * o3) - 1)
B = (exp(0.000871 * no2) - 1)
C = (exp(0.000487 * pm25) - 1)
# calculate files
aqhi = (10 / 10.4) * 100 * (A + B + C)
## extract values from rasters at the AQHI stations
aqhi_smoke = raster::extract(aqhi, smoke.communities)
df = cbind(df, aqhi_smoke)
}
poll
url1
# this function calcualte the three hour average of a pollutant. Only house this for hours 3 - 9 because of the 00 in the URL
getMeanRas3_9 = function(hour,poll) {
hour2 = hour - 1
hour3 = hour - 2
h1 = interWork(poll,hour)*1000000000
h2 = interWork(poll,hour2)*1000000000
h3 = interWork(poll,hour3)*1000000000
rasStack = stack(h1,h2,h3)
pollStack = calc(rasStack, fun = mean)
}
# create a base dataframe
df = smoke.communities %>% st_drop_geometry()
# for each hour, calculate the AQHI
for (hour in 3:9) {
print(hour)
no2 = getMeanRas3_9(hour, "NO2")
o3 = getMeanRas3_9(hour, "O3")
pm25 = getMeanRas3_9(hour, "PM2.5")
# Calculate AQHI
A = (exp(0.000537 * o3) - 1)
B = (exp(0.000871 * no2) - 1)
C = (exp(0.000487 * pm25) - 1)
# calculate files
aqhi = (10 / 10.4) * 100 * (A + B + C)
## extract values from rasters at the AQHI stations
aqhi_smoke = raster::extract(aqhi, smoke.communities)
df = cbind(df, aqhi_smoke)
}
df
names(df)[ncol(df)] <- paste("H_",hour,sep="")
df
# create a base dataframe
df = smoke.communities %>% st_drop_geometry()
# for each hour, calculate the AQHI
for (hour in 3:9) {
print(hour)
no2 = getMeanRas3_9(hour, "NO2")
o3 = getMeanRas3_9(hour, "O3")
pm25 = getMeanRas3_9(hour, "PM2.5")
# Calculate AQHI
A = (exp(0.000537 * o3) - 1)
B = (exp(0.000871 * no2) - 1)
C = (exp(0.000487 * pm25) - 1)
# calculate files
aqhi = (10 / 10.4) * 100 * (A + B + C)
## extract values from rasters at the AQHI stations
aqhi_smoke = raster::extract(aqhi, smoke.communities)
df = cbind(df, aqhi_smoke)
names(df)[ncol(df)] <- paste("H_",hour,sep="")
}
df
x <- 0:70
case_when(x > 2 & x < 5 ~ "fizz",
.default = as.character(x))
case_when(x > 2 & x < 10 ~ "fizz",
.default = as.character(x))
write.csv(df,"72_aqhi.csv")
current.date
# set the current date
current.date = as.POSIXlt(Sys.Date(), tz = "UTC")
current.time = as.POSIXlt(Sys.time(), tz = "UTC")
current.date
current.time
current.time
current.date
Sys.Date
Sys.Date()
Sys.time()
as.POSIXlt(Sys.time(), tz = "UTC")
# delete this after debugging
current.date = as_date("2023-12-19")
current.date
current.date-1
current.date - hour(1)
current.time = as_date("2023-12-19")
current.time
current.time - 1
current.time - hours(1)
for(i in 0:12){
ifelse(x < 2, print("check"),x)}
for(x in 0:12){
ifelse(x < 2, print("check"),x)}
for(x in 0:12){
ifelse(x < 2, print("check"),print(x))}
for (x in 0:12) {
case_when(
x == 0 ~ print("fizz buzz"),
x == 5 ~ "fizz",
.default = as.character(x)
)
}
for (x in 0:12) {
case_when(
x == 0 ~ print("fizz buzz"),
x == 5 ~ print("fizz"),
.default = as.character(x)
)
}
for (x in 0:12) {
case_when(
x == 0 ~ print("fizz buzz"),
x == 5 ~ print("fizz"),
.default = print(x)
)
}
for (x in 0:12) {
case_when(
x == 0 ~ print("fizz buzz"),
x == 5 ~ print("fizz"),
.default = as.character(x)
)
}
for (x in 0:12) {
ifelse(x < 2, print("check"), print(x))
}
for (x in 0:12) {
ifelse(x < 2,
print("check"),
ifelse(x < 12, print("nope"), "hi"))
}
for (x in 0:12) {
ifelse(x < 2,
print("check"),
ifelse(x < 10, print("nope"), "hi"))
}
for (x in 0:12) {
ifelse(x < 2,
print("check"),
ifelse(x < 10, print("nope"), print(x)))
}
hour
for i in range(21):
for (i in range(21)):
for (i in 1:21):
for (i in 1:21){
formatted_number = f"{i:03d}"
for (i in 1:21) {
formatted_number = f"{i:03d}"
formatted_number = f"{i:03d}"
str_pad(x, 8, pad = "0")
str_pad(x, 3, pad = "0")
str_pad(12, 3, pad = "0")
str_pad(2, 3, pad = "0")
str_pad(72, 3, pad = "0")
str_pad(72, 3, pad = "0")
class(str_pad(72, 3, pad = "0"))
# give the tif a name
poll.name = paste(
wd,
"/",
poll,
"_",
date(current.date),
"_Base00_H", # the base forcasting hour
str_pad(hour, 3, pad = "0"),  # this line adds leading zeros for numbers less than ten
".tif",
sep =
""
)
poll.name
# get the URL for a certain hour
url1 =  paste(
"https://dd.weather.gc.ca/model_raqdps/10km/grib2/00/",
"00",
hour,
"/",
year(current.time),
month(current.time),
day(current.time),
"T",
"00",
"Z_MSC_RAQDPS_",
poll,
"_Sfc_RLatLon0.09_PT",
str_pad(hour, 3, pad = "0"), # this line adds leading zeros for numbers less than ten
"H.grib2",
sep = ""
)
url1
# this function creates a raster for one pollutant and one hour. Only house this for hours 3 - 9 because of the 00 in the URL
interWork = function(poll,hour) {
# get the URL for a certain hour
url1 =  paste(
"https://dd.weather.gc.ca/model_raqdps/10km/grib2/00/",
"00",
hour,
"/",
year(current.time),
month(current.time),
day(current.time),
"T",
"00",
"Z_MSC_RAQDPS_",
poll,
"_Sfc_RLatLon0.09_PT",
str_pad(hour, 3, pad = "0"), # this line adds leading zeros for numbers less than ten
"H.grib2",
sep = ""
)
# get the file
poll.response <- GET(url1)
# give the tif a name
poll.name = paste(
wd,
"/",
poll,
"_",
date(current.date),
"_Base00_H", # the base forcasting hour
str_pad(hour, 3, pad = "0"),  # this line adds leading zeros for numbers less than ten
".tif",
sep =
""
)
# save the raster
writeBin(content(poll.response, "raw"), poll.name)
tempRas = raster(poll.name)
}
# this function calcualte the three hour average of a pollutant. Only house this for hours 3 - 9 because of the 00 in the URL
getMeanRas3_9 = function(hour,poll) {
hour2 = hour - 1
hour3 = hour - 2
h1 = interWork(poll,hour)*1000000000
h2 = interWork(poll,hour2)*1000000000
h3 = interWork(poll,hour3)*1000000000
rasStack = stack(h1,h2,h3)
pollStack = calc(rasStack, fun = mean)
}
# create a base dataframe
df = smoke.communities %>% st_drop_geometry()
# for each hour between 3 and 9, calculate the AQHI
for (hour in 8:11) {
print(hour)
# get the rasters averaged to 3 hours for each pollutant
no2 = getMeanRas3_9(hour, "NO2")
o3 = getMeanRas3_9(hour, "O3")
pm25 = getMeanRas3_9(hour, "PM2.5")
# Calculate AQHI
A = (exp(0.000537 * o3) - 1)
B = (exp(0.000871 * no2) - 1)
C = (exp(0.000487 * pm25) - 1)
# calculate files
aqhi = (10 / 10.4) * 100 * (A + B + C)
## extract values from rasters at the AQHI stations
aqhi_smoke = raster::extract(aqhi, smoke.communities)
# add it to the dataframe
df = cbind(df, aqhi_smoke)
# change the name of the column
names(df)[ncol(df)] <- paste("H_",hour,sep="")
}
aqhi
o3
pm25
interWork("O3",10)
url1
interWork("O3",10)
url1
url1 =  paste(
"https://dd.weather.gc.ca/model_raqdps/10km/grib2/00/",
"00",
hour,
"/",
year(current.time),
month(current.time),
day(current.time),
"T",
"00",
"Z_MSC_RAQDPS_",
poll,
"_Sfc_RLatLon0.09_PT",
str_pad(hour, 3, pad = "0"), # this line adds leading zeros for numbers less than ten
"H.grib2",
sep = ""
)
paste(
+     "https://dd.weather.gc.ca/model_raqdps/10km/grib2/00/",
+     "00",
+     hour,
+     "/",
+     year(current.time),
+     month(current.time),
+     day(current.time),
+     "T",
+     "00",
+     "Z_MSC_RAQDPS_",
+     poll,
+     "_Sfc_RLatLon0.09_PT",
+     str_pad(hour, 3, pad = "0"), # this line adds leading zeros for numbers less than ten
+     "H.grib2",
+     sep = ""
paste(
+     "https://dd.weather.gc.ca/model_raqdps/10km/grib2/00/",
+     "00",
+     hour,
+     "/",
+     year(current.time),
+     month(current.time),
+     day(current.time),
+     "T",
+     "00",
+     "Z_MSC_RAQDPS_",
+     poll,
+     "_Sfc_RLatLon0.09_PT",
+     str_pad(hour, 3, pad = "0"), # this line adds leading zeros for numbers less than ten
+     "H.grib2",
+     sep = ""
paste(
"https://dd.weather.gc.ca/model_raqdps/10km/grib2/00/",
"00",
hour,
"/",
year(current.time),
month(current.time),
day(current.time),
"T",
"00",
"Z_MSC_RAQDPS_",
poll,
"_Sfc_RLatLon0.09_PT",
str_pad(hour, 3, pad = "0"), # this line adds leading zeros for numbers less than ten
"H.grib2",
sep = ""
)
# this function creates a raster for one pollutant and one hour. Only house this for hours 3 - 9 because of the 00 in the URL
interWork = function(poll,hour) {
# get the URL for a certain hour
url1 =  paste(
"https://dd.weather.gc.ca/model_raqdps/10km/grib2/00/",
str_pad(hour, 3, pad = "0"), # this line adds leading zeros for numbers less than ten
"/",
year(current.time),
month(current.time),
day(current.time),
"T",
"00",
"Z_MSC_RAQDPS_",
poll,
"_Sfc_RLatLon0.09_PT",
str_pad(hour, 3, pad = "0"), # this line adds leading zeros for numbers less than ten
"H.grib2",
sep = ""
)
# get the file
poll.response <- GET(url1)
# give the tif a name
poll.name = paste(
wd,
"/",
poll,
"_",
date(current.date),
"_Base00_H", # the base forcasting hour
str_pad(hour, 3, pad = "0"),  # this line adds leading zeros for numbers less than ten
".tif",
sep =
""
)
# save the raster
writeBin(content(poll.response, "raw"), poll.name)
tempRas = raster(poll.name)
}
# this function calcualte the three hour average of a pollutant. Only house this for hours 3 - 9 because of the 00 in the URL
getMeanRas3_9 = function(hour,poll) {
hour2 = hour - 1
hour3 = hour - 2
h1 = interWork(poll,hour)*1000000000
h2 = interWork(poll,hour2)*1000000000
h3 = interWork(poll,hour3)*1000000000
rasStack = stack(h1,h2,h3)
pollStack = calc(rasStack, fun = mean)
}
# create a base dataframe
df = smoke.communities %>% st_drop_geometry()
# for each hour between 3 and 9, calculate the AQHI
for (hour in 8:11) {
print(hour)
# get the rasters averaged to 3 hours for each pollutant
no2 = getMeanRas3_9(hour, "NO2")
o3 = getMeanRas3_9(hour, "O3")
pm25 = getMeanRas3_9(hour, "PM2.5")
# Calculate AQHI
A = (exp(0.000537 * o3) - 1)
B = (exp(0.000871 * no2) - 1)
C = (exp(0.000487 * pm25) - 1)
# calculate files
aqhi = (10 / 10.4) * 100 * (A + B + C)
## extract values from rasters at the AQHI stations
aqhi_smoke = raster::extract(aqhi, smoke.communities)
# add it to the dataframe
df = cbind(df, aqhi_smoke)
# change the name of the column
names(df)[ncol(df)] <- paste("H_",hour,sep="")
}
write.csv(df,"72_aqhi.csv")
write.csv(df,"72_aqhi.csv",row.names=FALSE)
write.csv(df,"72_aqhi.csv",row.names=FALSE)
# for each hour between 3 and 9, calculate the AQHI
for (hour in 2:72) {
print(hour)
# get the rasters averaged to 3 hours for each pollutant
no2 = getMeanRas3_9(hour, "NO2")
o3 = getMeanRas3_9(hour, "O3")
pm25 = getMeanRas3_9(hour, "PM2.5")
# Calculate AQHI
A = (exp(0.000537 * o3) - 1)
B = (exp(0.000871 * no2) - 1)
C = (exp(0.000487 * pm25) - 1)
# calculate files
aqhi = (10 / 10.4) * 100 * (A + B + C)
## extract values from rasters at the AQHI stations
aqhi_smoke = raster::extract(aqhi, smoke.communities)
# add it to the dataframe
df = cbind(df, aqhi_smoke)
# change the name of the column
names(df)[ncol(df)] <- paste("H_",hour,sep="")
}
start.time <- Sys.time()
# for each hour between 3 and 9, calculate the AQHI
for (hour in 2:72) {
print(hour)
# get the rasters averaged to 3 hours for each pollutant
no2 = getMeanRas3_9(hour, "NO2")
o3 = getMeanRas3_9(hour, "O3")
pm25 = getMeanRas3_9(hour, "PM2.5")
# Calculate AQHI
A = (exp(0.000537 * o3) - 1)
B = (exp(0.000871 * no2) - 1)
C = (exp(0.000487 * pm25) - 1)
# calculate files
aqhi = (10 / 10.4) * 100 * (A + B + C)
## extract values from rasters at the AQHI stations
aqhi_smoke = raster::extract(aqhi, smoke.communities)
# add it to the dataframe
df = cbind(df, aqhi_smoke)
# change the name of the column
names(df)[ncol(df)] <- paste("H_",hour,sep="")
}
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
df
# time zones
current.time
# time zones
current.time = as.POSIXlt(Sys.time(), tz = "UTC")
current.time
smoke.comm = read.csv("/Users/priyapatel/Library/CloudStorage/OneDrive-UniversityofToronto/!CANUE/AQHI Work/SmoKE project data sources - Community coordinates.csv")
smoke.sf = st_as_sf(smoke.comm, coords = c("lon", "lat"), crs = 4326, agr = "constant")
st_write(smoke.sf, "/Users/priyapatel/Library/CloudStorage/OneDrive-UniversityofToronto/!CANUE/AQHI Work/smoke.shp")
smoke.communities = "/Users/priyapatel/Library/CloudStorage/OneDrive-UniversityofToronto/!CANUE/AQHI Work/shapefiles/smoke_shp/smoke.shp"
smoke.communities = st_read(smoke.communities)
smoke.communities
write.csv(df,"20231219aqhi.csv",row.names=FALSE)
